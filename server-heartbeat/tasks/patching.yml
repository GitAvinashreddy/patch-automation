---
### Subscription status
- name: show subscription status
  block:
    - name: get RHEL subscription status
      shell: "subscription-manager identity"
      register: rhel_subscription
      ignore_errors: true
      when: "ansible_distribution == 'RedHat'"
    - debug:
        msg: "{{ rhel_subscription.stdout_lines or rhel_subscription.stderr_lines }}"
      when: "ansible_distribution == 'RedHat'"
    - set_fact:
        need_rhel_subscription: '{{ "This system is not yet registered" in rhel_subscription.stderr }}'
    - name: get SUSE/SLES subscription status
      shell: "SUSEConnect -s"
      register: suse_subscription
      when: "'SUSE' in ansible_distribution or 'SLES' in ansible_distribution"
      ignore_errors: true
    - debug:
        msg: "{{ suse_subscription.stdout_lines or suse_subscription.stderr_lines }}"
      when: "'SUSE' in ansible_distribution or 'SLES' in ansible_distribution"
  tags:
    - patching

### Katello
- name: download katello package RPM
  get_url:
    url: 'http://satellite6/pub/katello-ca-consumer-latest.noarch.rpm'
    dest: /tmp/katello.latest.rpm
  when: "ansible_distribution == 'RedHat'"
  tags:
    - patching

- name: update katello package
  shell: "rpm -Uhv /tmp/katello.latest.rpm && rm /tmp/katello.latest.rpm"
  when: "ansible_distribution == 'RedHat'"
  tags:
    - patching

- name: subscription
  block:
    ### SUSE subscription
  - name: subscribe to SUSE/SLES
    shell: "SUSEConnect -r {{ suse_activation_key }}"
    ignore_errors: true
    when: "('SUSE' in ansible_distribution or 'SLES' in ansible_distribution) and suse_subscription.rc!=0"
  ### RHEL subscription
  - name: subscripbe to RHEL 7
    redhat_subscription:
      activationkey: '{{ rhel7_activation_key }}'
      org_id: '{{ organization_id }}'
      state: present
      force_register: true
      auto_attach: true
    when: 'ansible_distribution == "RedHat" and ansible_distribution_major_version is match("7") and need_rhel_subscription'
  - name: subscripbe to RHEL 8
    redhat_subscription:
      activationkey: '{{ rhel8_activation_key }}'
      org_id: '{{ organization_id }}'
      state: present
      force_register: true
      auto_attach: true
    when: 'ansible_distribution == "RedHat" and ansible_distribution_major_version is match("8") and need_rhel_subscription'
  tags:
    - patching

- name: update RHEL 7 OSs & check whether reboot is required
  block:
    - name: run yum update
      yum:
        name: "*"
        disablerepo: "*"
        enablerepo: "{{ rhel7_enabled_repos }}"
        exclude: "{{ packages_to_exclude }}"
        security: "{{ rhel_security_updates }}"
        state: latest
    - name: Check if a reboot is needed on all RHEL based servers
      command: needs-restarting -r
      register: rhel7_restart_required
      ignore_errors: yes
  when: "ansible_distribution == 'RedHat' and ansible_distribution_major_version is match('7\\S*')"
  tags:
    - patching

- name: update RHEL 8 OSs & check whether reboot is required
  block:
    - name: run yum update
      yum:
        name: "*"
        disablerepo: "*"
        enablerepo: "{{ rhel8_enabled_repos }}"
        exclude: "{{ packages_to_exclude }}"
        security: "{{ rhel_security_updates }}"
        state: latest
    - name: Check if a reboot is needed on all RHEL based servers
      command: needs-restarting -r
      register: rhel8_restart_required
      ignore_errors: yes
  when: "ansible_distribution == 'RedHat' and ansible_distribution_major_version is match('8\\*')"
  tags:
    - patching

- name: update CentOS OS & check wether reboot is required
  block:
    - name: run yum update
      yum:
        name: "*"
        disablerepo: "*"
        enablerepo: "{{ centos_enabled_repos }}"
        exclude: "{{ packages_to_exclude }}"
        state: latest
    - name: Check if a reboot is needed on all CentOS based servers
      command: needs-restarting -r
      register: centos_restart_required
      ignore_errors: yes
  when: "ansible_distribution == 'CentOS'"
  tags:
    - patching

- name: update SUSE OS & check wether reboot is required
  block:
    - name: run zypper update
      zypper:
        name: "*"
        state: latest
    - name: Check if a reboot is needed on all SUSE/OpenSUSE/SLES based servers
      register: suse_reboot_required_file
      stat:
        path: /boot/do_purge_kernels
        get_md5: no
  when: "'SUSE' in ansible_distribution or 'SLES' in ansible_distribution"
  tags:
    - patching

- name: update Ubuntu OS & check wether reboot is required
  block:
    - name: run apt update
      apt:
        name: "*"
        state: latest
    - name: Check if a reboot is needed on all Ubuntu based servers
      register: ubuntu_reboot_required_file
      stat:
        path: /var/run/reboot-required
        get_md5: no
  when: "'Ubuntu' in ansible_distribution"
  tags:
    - patching

- debug:
    msg: "{{ suse_reboot_required_file }}"

- name: notify patching stage ended / reboot SUSE/SLES servers if necessary
  shell: "uptime"
  when: "('SUSE' in ansible_distribution or 'SLES' in ansible_distribution) and suse_reboot_required_file.stat.exists"
  notify:
      - reboot
  tags:
      - patching
- name: notify patching stage ended / reboot Ubuntu servers if necessary
  shell: "uptime"
  when: "'Ubuntu' in ansible_distribution and ubuntu_reboot_required_file.stat.exists"
  notify:
      - reboot
  tags:
      - patching
- name: notify patching stage ended / reboot CentOS servers if necessary
  shell: "uptime"
  when: "ansible_distribution == 'CentOS' and centos_restart_required.rc==1"
  notify:
      - reboot
  tags:
      - patching
- name: notify patching stage ended / reboot RHEL servers if necessary
  shell: "uptime"
  when: "ansible_distribution == 'RedHat' and ansible_distribution_major_version is match('7') and rhel7_restart_required.rc==1"
  notify:
      - reboot
  tags:
      - patching
- name: notify patching stage ended / reboot RHEL servers if necessary
  shell: "uptime"
  when: "ansible_distribution == 'RedHat' and ansible_distribution_major_version is match('8') and rhel8_restart_required.rc==1"
  notify:
      - reboot
  tags:
      - patching